name: Django CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]



jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.12,3.12]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt

        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
   # - name: Collectstatic, makemigrations & migrate
   #   run: |
   #     python manage.py collectstatic --noinput
   #     python manage.py makemigrations --noinput
   #     python manage.py migrate --noinput
       
        
    #- name: Run Tests
    #  run: |
    #    python3  manage.py test home


  # deploy:
  #   runs-on: self-hosted
  #   needs: build
  #   name: deploy
    
  #   strategy:
  #     max-parallel: 2
  #     matrix:
  #       python-version: [3.10.12]
        
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}


  #   - name: Create Vitrual_Env & Install Dependencies
  #     run: |
  #       # sudo -H pip3 install --upgrade pip 
  #       # sudo -H pip3 install virtualenv
  #       # sudo -H pip3 install tree ##FIXIT
  #       whoami

  #       mkdir -p ~/dariapp
  #       cd ~/dariapp
  

  #       # virtualenv env
  #       source env/bin/activate

  
  deploy:
    runs-on: ubuntu-latest
    needs: build    
    name: deploy
    

    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_IP }}
        username: ${{ secrets.DO_USER }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.DO_KEY }}
        
        script: |
          # mkdir -p ~/app
          whoami
          # mkdir -p ~/app/src
          # cd ~/app
          # source venv/bin/activate
          
          # cd ~/app/src
          #git stash
          #git stash drop
          # git fetch          
          # git reset --hard origin/main
              
          #git pull origin main
       



  #         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
  #         #create Migrations Backup Directories


  #         mkdir -p ~/app/migrations/spinx/migrations
  #         mkdir -p ~/app/migrations/rgames/migrations
  #         mkdir -p ~/app/migrations/users/migrations
  #         mkdir -p ~/app/migrations/home/migrations
  #         mkdir -p ~/app/migrations/accounts/migrations 
          
  #         mkdir -p ~/app/migrations/mpesa_api/core/migrations
  #         mkdir -p ~/app/migrations/paypal/standard/ipn/migrations
  #         mkdir -p ~/app/migrations/paypal/pro/migrations

          
  #         #RSYNC Backup Migrations To Workin Directory

  #         rsync -a --delete ~/app/migrations/spinx/migrations ~/app/src/spinx
  #         rsync -a --delete ~/app/migrations/rgames/migrations ~/app/src/rgames
  #         rsync -a --delete ~/app/migrations/users/migrations ~/app/src/users
  #         rsync -a --delete ~/app/migrations/home/migrations ~/app/src/home
  #         rsync -a --delete ~/app/migrations/accounts/migrations ~/app/src/accounts

  #         rsync -a --delete ~/app/migrations/mpesa_api/core/migrations ~/app/src/mpesa_api/core
  #         rsync -a --delete ~/app/migrations/paypal/standard/ipn/migrations ~/app/src/paypal/standard/ipn
  #         rsync -a --delete ~/app/migrations/paypal/pro/migrations ~/app/src/paypal/pro

  #         #COLLECTSTATIC          
  #         cd ~/app/src 
  #         python manage.py collectstatic --noinput
          
          
  #         #MAKEMIGRATIONS
  #         cd ~/app/src 
          
  #         python manage.py makemigrations
  #         python manage.py makemigrations users
  #         python manage.py makemigrations rgames
  #         python manage.py makemigrations home
  #         python manage.py makemigrations spinx
  #         python manage.py makemigrations accounts
  #         python manage.py makemigrations core
  #         python manage.py makemigrations ipn
  #         python manage.py makemigrations pro
          
  #         #_____________________________________________________________
          
  #         #MIGRATE-ALL
  #         cd ~/app/src  
  #         python manage.py migrate

  #         #______________________________________________________________

  #         #MIGRATE-spinx
  #         cd ~/app/src
  #         python manage.py migrate spinx


  #         #Rsync Workin Directory to Backup Migrations-spinx
  #         rsync -a --delete ~/app/src/spinx/migrations ~/app/migrations/spinx

  #         cd ~/app/migrations/spinx
  #         tree

  #         ############################################
          
  #         #MIGRATE-rgames
  #         cd ~/app/src
  #         python manage.py migrate rgames


  #         #Rsync Workin Directory to Backup Migrations-rgames
  #         rsync -a --delete ~/app/src/rgames/migrations ~/app/migrations/rgames

  #         cd ~/app/migrations/rgames
  #         tree

  #         ############################################          

  #         #USERS
  #         cd ~/app/src
  #         python manage.py migrate users

         
  #         #Rsync Workin Directory to Backup Migrations-users Backup          
          
  #         rsync -a --delete ~/app/src/users/migrations ~/app/migrations/users          
  #         cd ~/app/migrations/users
  #         tree  

  #         #  


  #         #HOME
  #         cd ~/app/src  
  #         python manage.py migrate home


  #         # Rsync Workin Directory to Backup Migrations-home

  #         rsync -a --delete ~/app/src/home/migrations ~/app/migrations/home
  #         cd ~/app/migrations/home
  #         tree 

  #         #

  #         #ACCOUNTS
  #         cd ~/app/src
  #         python manage.py migrate accounts

         
  #         #Rsync Workin Directory to Backup Migrations-accounts Backup          
          
  #         rsync -a --delete ~/app/src/accounts/migrations ~/app/migrations/accounts          
  #         cd ~/app/migrations/accounts
  #         tree 


  #         #CORE
  #         cd ~/app/src   
  #         python manage.py migrate core
          
  #         # Rsync Workin Directory to Backup Migrations-core

  #         rsync -a --delete ~/app/src/mpesa_api/core/migrations ~/app/migrations/mpesa_api/core
  #         cd ~/app/migrations/mpesa_api/core
  #         tree  


  #         ## IPN
  #         cd ~/app/src   
  #         python manage.py migrate ipn

  #         # Rsync Workin Directory to Backup Migrations-ipn
  #         rsync -a --delete ~/app/src/paypal/standard/ipn/migrations ~/app/migrations/paypal/standard/ipn 
  #         cd ~/app/migrations/paypal/standard/ipn
  #         tree 


  #         #PRO
  #         cd ~/app/src 
  #         python manage.py migrate pro
          
  #         #Rsync Workin Directory to Backup Migrations-pro

  #         rsync -a --delete ~/app/src/paypal/pro/migrations ~/app/migrations/paypal/pro 
  #         cd ~/app/migrations/paypal/pro
  #         tree 

  #         ###################################################



  #         #Backup Migrations_Updated

  #         cd ~/app/migrations
  #         tree   
               
  #         #sudo shutdown -r now
        

# name: dariapp CI/CD

# on:
#   push:
#     branches: [ main ]
#   # pull_request:
#   #   branches: [ prod ]



# jobs:
#   build:

#     runs-on: ubuntu-latest
#     name: build

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python 3.8
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8
          
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8
#         pip install -r requirements.txt


#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
#     - name: Collectstatic, makemigrations & migrate
#       run: |
        
#         python manage.py collectstatic
        # python manage.py makemigrations users
        # python manage.py makemigrations home
        # python manage.py makemigrations account
        # python manage.py makemigrations daru_wheel
        # python manage.py makemigrations core
        # python manage.py makemigrations

        # python manage.py migrate

    # - name: Run Tests
    #   run: |
    #     python manage.py test account users daru_wheel

        
  # deploy:
  #   runs-on: self-hosted
  #   needs: build
  #   name: deploy


  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.8
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.8

  #   - name: Create Vitrual_Env & Install Dependencies
  #     run: |
  #       # sudo -H pip3 install --upgrade pip 
  #       # sudo -H pip3 install virtualenv
  #       # sudo -H pip3 install tree ##FIXIT

  #       mkdir -p ~/dariapp
  #       cd ~/dariapp

  #       # virtualenv env
  #       source env/bin/activate


  #       cd ~/actions-runner/deploy/dariapp/dariapp
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


  #   # - name: Install Dependencies
  #   #   run: |
  #   #     pwd
  #   #     cd ~/actions-runner/deploy/dariapp/dariapp
        
  #   #     python -m pip install --upgrade pip    
  #   #     python -m pip install tree #R
  #   #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  #   - name: Create ENV VAR
  #     run: |
  #       mkdir -p ~/dariapp
  #       mkdir -p ~/dariapp/src
  #       touch ~/dariapp/.env
  #       cp ~/dariapp/.env  ~/actions-runner/deploy/dariapp/dariapp


  #   - name: Create Migrations Backup Directories
  #     run: |  
  #       mkdir -p ~/dariapp/migrations/account/migrations
  #       mkdir -p ~/dariapp/migrations/daru_wheel/migrations
  #       mkdir -p ~/dariapp/migrations/users/migrations
  #       mkdir -p ~/dariapp/migrations/home/migrations
  #       mkdir -p ~/dariapp/migrations/mpesa_api/core/migrations
  #       mkdir -p ~/dariapp/migrations/paypal/standard/ipn/migrations
  #       mkdir -p ~/dariapp/migrations/paypal/pro/migrations

  #       cd ~/dariapp/migrations
  #       tree


  #   - name: RSYNC Backup Migrations To Workin Directory
  #     run: |
  #       rsync -a --delete ~/dariapp/migrations/account/migrations ~/actions-runner/deploy/dariapp/dariapp/account
  #       rsync -a --delete ~/dariapp/migrations/daru_wheel/migrations ~/actions-runner/deploy/dariapp/dariapp/daru_wheel
  #       rsync -a --delete ~/dariapp/migrations/users/migrations ~/actions-runner/deploy/dariapp/dariapp/users
  #       rsync -a --delete ~/dariapp/migrations/home/migrations ~/actions-runner/deploy/dariapp/dariapp/home
  #       rsync -a --delete ~/dariapp/migrations/mpesa_api/core/migrations ~/actions-runner/deploy/dariapp/dariapp/mpesa_api/core
  #       rsync -a --delete ~/dariapp/migrations/paypal/standard/ipn/migrations ~/actions-runner/deploy/dariapp/dariapp/paypal/standard/ipn
  #       rsync -a --delete ~/dariapp/migrations/paypal/pro/migrations ~/actions-runner/deploy/dariapp/dariapp/paypal/pro

        
  #   - name: COLLECTSTATIC
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp                
  #       python manage.py collectstatic

  #   - name: MAKEMIGRATIONS
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp 
  #       python manage.py makemigrations
  #       python manage.py makemigrations users
  #       python manage.py makemigrations home
  #       python manage.py makemigrations account
  #       python manage.py makemigrations daru_wheel
  #       python manage.py makemigrations core
  #       python manage.py makemigrations ipn
  #       python manage.py makemigrations pro

  #   ## All
  #   - name: APP-MIGRATE
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp        
  #       python manage.py migrate

  #   ## account
  #   - name: MIGRATE-account
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp        
  #       python manage.py migrate account

  #   - name: Rsync Workin Directory to Backup Migrations-account
  #     run: |
  #       rsync -a --delete ~/actions-runner/deploy/dariapp/dariapp/account/migrations ~/dariapp/migrations/account
  #       cd ~/dariapp/migrations/account
  #       tree

  #   ## daru_wheel
  #   - name: MIGRATE-daru_wheel
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp        
  #       python manage.py migrate daru_wheel

  #   - name: Rsync Workin Directory to Backup Migrations-daru_wheel
  #     run: |
  #       rsync -a --delete ~/actions-runner/deploy/dariapp/dariapp/daru_wheel/migrations ~/dariapp/migrations/daru_wheel
  #       cd ~/dariapp/migrations/daru_wheel
  #       tree

  #   ## users
  #   - name: MIGRATE-users
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp        
  #       python manage.py migrate users

  #   - name: Rsync Workin Directory to Backup Migrations-users
  #     run: |
  #       rsync -a --delete ~/actions-runner/deploy/dariapp/dariapp/users/migrations ~/dariapp/migrations/users
  #       cd ~/dariapp/migrations/users
  #       tree    
  #   ## home
  #   - name: MIGRATE-home
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp        
  #       python manage.py migrate home

  #   - name: Rsync Workin Directory to Backup Migrations-home
  #     run: |
  #       rsync -a --delete ~/actions-runner/deploy/dariapp/dariapp/home/migrations ~/dariapp/migrations/home
  #       cd ~/dariapp/migrations/home
  #       tree  

  #   ## core
  #   - name: MIGRATE-core
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp        
  #       python manage.py migrate core

  #   - name: Rsync Workin Directory to Backup Migrations-core
  #     run: |
  #       rsync -a --delete ~/actions-runner/deploy/dariapp/dariapp/mpesa_api/core/migrations ~/dariapp/migrations/mpesa_api/core
  #       cd ~/dariapp/migrations/mpesa_api/core
  #       tree   

  #   ## ipn
  #   - name: MIGRATE-ipn
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp        
  #       # python manage.py migrate ipn

  #   - name: Rsync Workin Directory to Backup Migrations-ipn
  #     run: |
  #       rsync -a --delete ~/actions-runner/deploy/dariapp/dariapp/paypal/standard/ipn/migrations ~/dariapp/migrations/paypal/standard/ipn 
  #       cd ~/dariapp/migrations/paypal/standard/ipn
  #       tree 

  #   ## pro
  #   - name: MIGRATE-pro
  #     run: |
  #       cd ~/actions-runner/deploy/dariapp/dariapp        
  #       python manage.py migrate pro

  #   - name: Rsync Workin Directory to Backup Migrations-pro
  #     run: |
  #       rsync -a --delete ~/actions-runner/deploy/dariapp/dariapp/paypal/pro/migrations ~/dariapp/migrations/paypal/pro 
  #       cd ~/dariapp/migrations/paypal/pro
  #       tree 

  #   # - name: Rsync Updated APP to Workin Directory
  #   #   run: |
  #   #     rsync -a --delete ~/actions-runner/deploy/dariapp/dariapp ~/dariapp/src
  #   #     cd ~/dariapp/src
  #   #     # tree
  #   - name: Backup Migrations_Updated
  #     run: |
  #       cd ~/dariapp/migrations
  #       tree


  #   - name: Test Redis
  #     run: |
  #       redis-cli ping


  #   # - name: Run Tests
  #   #   run: |
  #   #     python manage.py test


  #   # - name: Reload
  #   #   run: |
  #   #     sudo shutdown -r now

  #   # - name: Reload
  #   #   run: |
  #   #     sudo restart

